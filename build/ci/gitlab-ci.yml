variables:
  DOCKER_HOST: tcp://127.0.0.1:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_REGISTRY: registry.gitlab.com
  DOCKER_REPOSITORY: $DOCKER_REGISTRY/$CI_PROJECT_PATH

  KUBECONFIG: ''
  # These are set by kubernetes integration.
  #KUBE_INGRESS_BASE_DOMAIN: secureweb.ltd
  #KUBE_NAMESPACE:  

image: 
  name: alpine/helm:2.13.1
  entrypoint: [""]

stages:
  - build
  - test
  - push
  - review
  - production
  - testing
  - cleanup

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -f build/package/Dockerfile -t $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA src
  after_script:
    - docker save $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA > container.tar
  artifacts:
    expire_in: 4 hour
    paths:
    - container.tar
      

helm:
  stage: test
  script:
    - helm lint deployment/helm/website

trivy:
  stage: test
  image: knqyf263/trivy
  before_script:
    - echo "Running before_script"
  script:
    - trivy --quiet -f json -o gl-container-scanning-report.json --input container.tar 
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
  dependencies:
    - build

gitleaks:
  stage: test
  image: zricethezav/gitleaks
  before_script:
    - echo "Running before_script"
  script:
    - gitleaks --report=gitleak.json --repo-path=.
  artifacts:
    reports:
      sast: gitleak.json

trufflehog:
  stage: test
  image: cloudkats/trufflehog
  before_script:
    - echo "running before"
  script:
    - trufflehog file://$PWD 
    - trufflehog --json file://$PWD | tee trufflehog.json
  artifacts:
    reports:
      sast: trufflehog.json

push:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker load < container.tar
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY
  script:
    - docker push $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA
  after_script:
    - docker inspect --format='{{index .RepoDigests 0}}' 
      $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA | cut -d ":" -f2 > docker_hash.txt
    - docker inspect --format='{{index .RepoDigests 0}}' 
      $DOCKER_REPOSITORY:$CI_COMMIT_SHORT_SHA | cut -d "@" -f2 | 
      cut -d ":" -f1 > docker_hash_type.txt
  artifacts:
    paths:
    - docker_hash.txt
    - docker_hash_type.txt
  dependencies:
    - build

review:
  stage: review
  script:
    - helm upgrade --install --wait 
      --set image.repository=$DOCKER_REPOSITORY@$DOCKER_HASH_TYPE
      --set image.tag=$DOCKER_HASH
      --set ingress.hosts[0]=$ENVIRONMENT_FQDN
      --set ingress.tls[0].hosts[0]=$ENVIRONMENT_FQDN
      $CI_ENVIRONMENT_SLUG deployment/helm/website
      --namespace=$KUBE_NAMESPACE
  after_script:
    - echo $CI_ENVIRONMENT_URL > environment_url.txt
  environment:
    name: review/$CI_COMMIT_REF_SLUG 
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN 
    on_stop: stop_review
  only:
    refs:
      - branches
      - tags
  except:
    refs:
      - master
  artifacts:
    paths:
    - environment_url.txt
  dependencies:
    - push

stop_review:
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script: 
    - helm delete --purge $CI_ENVIRONMENT_SLUG
  environment:
    name: review/$CI_COMMIT_REF_SLUG 
    action: stop
  when: manual
  allow_failure: true
  only:
    refs:
      - branches
      - tags
  except:
    refs:
      - master

production:
  stage: production
  script:
    - helm upgrade --install --wait 
      --set image.repository=$DOCKER_REPOSITORY@$DOCKER_HASH_TYPE
      --set image.tag=$DOCKER_HASH
      --set ingress.hosts[0]=$ENVIRONMENT_FQDN
      --set ingress.tls[0].hosts[0]=$ENVIRONMENT_FQDN
      $CI_ENVIRONMENT_SLUG-$CI_PROJECT_PATH_SLUG deployment/helm/website
      --namespace=$KUBE_NAMESPACE
  after_script:
    - echo $CI_ENVIRONMENT_URL > environment_url.txt
  environment:
    name: production
    url: https://$KUBE_INGRESS_BASE_DOMAIN
  only:
    refs:
      - master
  artifacts:
    paths:
    - environment_url.txt

zap:
  stage: testing
  image: owasp/zap2docker-weekly:latest
  before_script:
    - export ENVIRONMENT_URL=$(cat environment_url.txt)
    - mkdir -p /zap/wrk
  script:
    - zap-baseline.py -t $ENVIRONMENT_URL -J gl-dast-report.json
  after_script:
    - mv /zap/wrk/gl-dast-report.json .
  artifacts:
    reports:
      dast:
        - gl-dast-report.json 
  dependencies:
    - review
    - production

performance:
  stage: testing
  image: sitespeedio/sitespeed.io:6.3.1
  before_script:
    - export ENVIRONMENT_URL=$(cat environment_url.txt)
    - mkdir {sitespeed-results,gitlab-exporter}
    - wget -O ./gitlab-exporter/index.js https://gitlab.com/gitlab-org/gl-performance/raw/master/index.js
  script:
    - /start.sh --plugins.add ./gitlab-exporter --outputFolder sitespeed-results $ENVIRONMENT_URL
  after_script:
    - mv sitespeed-results/data/performance.json performance.json
  artifacts:
    reports:
      performance: performance.json    
  dependencies:
    - review
    - production


.setup_env: &setup_env |
  set +x
  echo "setup_env"
  export DOCKER_HASH=$(cat docker_hash.txt)
  export DOCKER_HASH_TYPE=$(cat docker_hash_type.txt)
  export ENVIRONMENT_FQDN=${CI_ENVIRONMENT_URL:8}

before_script:
  - *setup_env